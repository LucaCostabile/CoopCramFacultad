generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cache {
  key        String @id @db.VarChar(255)
  value      String @db.MediumText
  expiration Int
}

model cache_locks {
  key        String @id @db.VarChar(255)
  owner      String @db.VarChar(255)
  expiration Int
}

model failed_jobs {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  uuid       String   @unique(map: "failed_jobs_uuid_unique") @db.VarChar(255)
  connection String   @db.Text
  queue      String   @db.Text
  payload    String   @db.LongText
  exception  String   @db.LongText
  failed_at  DateTime @default(now()) @db.Timestamp(0)
}

model job_batches {
  id             String  @id @db.VarChar(255)
  name           String  @db.VarChar(255)
  total_jobs     Int
  pending_jobs   Int
  failed_jobs    Int
  failed_job_ids String  @db.LongText
  options        String? @db.MediumText
  cancelled_at   Int?
  created_at     Int
  finished_at    Int?
}

model jobs {
  id           BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  queue        String @db.VarChar(255)
  payload      String @db.LongText
  attempts     Int    @db.UnsignedTinyInt
  reserved_at  Int?   @db.UnsignedInt
  available_at Int    @db.UnsignedInt
  created_at   Int    @db.UnsignedInt

  @@index([queue], map: "jobs_queue_index")
}

model news {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title         String    @db.VarChar(255)
  content       String    @db.Text
  image         String?   @db.VarChar(255)
  is_active     Boolean   @default(true)
  display_order Int?      @db.UnsignedInt
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
}

model order_items {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  order_id     BigInt    @db.UnsignedBigInt
  product_id   BigInt?   @db.UnsignedBigInt
  product_code String?   @db.VarChar(255)
  quantity     Int       @default(1) @db.UnsignedInt
  unit_price   Decimal   @default(0.00) @db.Decimal(12, 2)
  subtotal     Decimal   @default(0.00) @db.Decimal(12, 2)
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)

  @@index([order_id], map: "order_items_order_id_index")
  @@index([product_code], map: "order_items_product_code_index")
  @@index([product_id], map: "order_items_product_id_index")
}

model orders {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    String?   @db.VarChar(255)
  status     String    @default("pending") @db.VarChar(255)
  total      Decimal   @default(0.00) @db.Decimal(12, 2)
  paid_at    DateTime? @db.Timestamp(0)
  comment    String?   @db.Text
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  @@index([paid_at], map: "orders_paid_at_index")
  @@index([status], map: "orders_status_index")
  @@index([user_id], map: "orders_user_id_index")
}

model password_reset_tokens {
  email      String    @id @db.VarChar(255)
  token      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
}

model products {
  id                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  code                String    @unique(map: "products_code_unique") @db.VarChar(255)
  rubro               String?   @db.VarChar(255)
  motor               String?   @db.VarChar(255)
  nro_fabrica         String?   @db.VarChar(255)
  articulo            String?   @db.VarChar(255)
  info_tecnica        String?   @db.Text
  price               Decimal   @default(0.00) @db.Decimal(12, 2)
  mv                  String?   @db.VarChar(10)
  stock               String?   @db.VarChar(50)
  in_stock            Boolean   @default(false)
  is_active           Boolean   @default(true)
  updated_from_txt_at DateTime? @db.Timestamp(0)
  created_at          DateTime? @db.Timestamp(0)
  updated_at          DateTime? @db.Timestamp(0)

  @@index([articulo])
  @@index([in_stock], map: "products_instock_idx")
  @@index([is_active], map: "products_isactive_idx")
  @@index([motor])
  @@index([mv])
  @@index([nro_fabrica], map: "products_nrofabrica_idx")
  @@index([rubro])
}

model roles {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String    @unique(map: "roles_name_unique") @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model sessions {
  id            String  @id @db.VarChar(255)
  user_id       BigInt? @db.UnsignedBigInt
  ip_address    String? @db.VarChar(45)
  user_agent    String? @db.Text
  payload       String  @db.LongText
  last_activity Int

  @@index([last_activity], map: "sessions_last_activity_index")
  @@index([user_id], map: "sessions_user_id_index")
}

model users {
  id                String    @id @db.VarChar(255)
  name              String    @db.VarChar(255)
  role              String    @default("sin_rol") @db.VarChar(255)
  email             String?   @unique(map: "users_email_unique") @db.VarChar(255)
  phone             String?   @unique(map: "users_phone_unique") @db.VarChar(255)
  email_pending     String?   @db.VarChar(255)
  email_verified_at DateTime? @db.Timestamp(0)
  password          String?   @db.VarChar(255)
  remember_token    String?   @db.VarChar(100)
  is_disabled       Boolean   @default(false)
  login_count       BigInt    @default(0) @db.UnsignedBigInt
  last_login_at     DateTime? @db.Timestamp(0)
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
}
